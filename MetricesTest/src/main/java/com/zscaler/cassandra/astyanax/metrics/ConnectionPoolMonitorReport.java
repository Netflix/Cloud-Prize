/**
 * 
 */
package com.zscaler.cassandra.astyanax.metrics;

import java.io.File;
import org.apache.log4j.Logger;

import com.yammer.metrics.core.MetricsRegistry;
import com.yammer.metrics.reporting.JmxReporter;

/**
 * implementation of the Connection Pool Monitor report . this implementation
 * requires registry from connection pool monitor metrics registry contains all
 * the gauge metrics which will be used to exposed through JMX reporter
 * 
 * @author Sindhu
 * 
 */
public class ConnectionPoolMonitorReport {
	private static final Logger logger = Logger
			.getLogger(ConnectionPoolMonitorReport.class);
	private static ConfigurationFactory configurationFactoryInstance = ConfigurationFactory
			.getInstance();

	private static final ConnectionPoolMonitorReport connectionPoolMonitorReportSingleton = new ConnectionPoolMonitorReport();

	private ConnectionPoolMonitorReport() {

	}

	/** provides the singleton instance of ConnectionPoolMonitorReport */
	public static ConnectionPoolMonitorReport getInstance() {
		return connectionPoolMonitorReportSingleton;
	}

	/**
	 * takes the Metric registry generated by ConnectionPoolMonitorMetrics class
	 * and provide as input for JMXreporter
	 */
	public static void generateConnectionPoolMonitorReport() {

		MetricsRegistry poolMonitorRegistry = ConnectionPoolMonitorMetrics
				.getConnPoolMonitorRegistry();
		JmxReporter jmxReporterInstance = new JmxReporter(poolMonitorRegistry);
		jmxReporterInstance.start();

		/** console reporter is used to display results on console */

		com.yammer.metrics.reporting.ConsoleReporter.enable(
				poolMonitorRegistry, configurationFactoryInstance.getPeriod(),
				configurationFactoryInstance.getTimeunit());
		logger.debug("Displaying ConnectionPoolMonitor Metrics on Console : with period "
				+ configurationFactoryInstance.getPeriod()
				+ " "
				+ "and Time Unit:" + configurationFactoryInstance.getTimeunit());
		
		/** CSVreporter is used to generate csv files in given directory */

		com.yammer.metrics.reporting.CsvReporter.enable(
				poolMonitorRegistry,
				new File(configurationFactoryInstance
						.getFileDestinationConnPoolMonitorReport()),
				configurationFactoryInstance.getPeriod(),
				configurationFactoryInstance.getTimeunit());

		logger.debug("writing ConnectionPoolMonitor Metrics to the directory location :"
				+ configurationFactoryInstance
						.getFileDestinationConnPoolMonitorReport()
				+ " "
				+ "with period :"
				+ configurationFactoryInstance.getPeriod()
				+ " "
				+ "and Time Unit:"
				+ configurationFactoryInstance.getTimeunit());

	}

}
