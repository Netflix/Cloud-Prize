/**
 * 
 */
package com.zscaler.cassandra.astyanax.metrics;

import java.io.File;

import org.apache.log4j.Logger;

import com.yammer.metrics.core.MetricsRegistry;
import com.yammer.metrics.reporting.JmxReporter;

/**
 * implementation of the Connection Pool configuration report . this
 * implementation requires registry from connection pool configuration metrics
 * registry contains all the gauge metrics which will be used to exposed through
 * JMX reporter
 * 
 * @author Sindhu
 * 
 */
public class ConnectionPoolConfigurationReport {

	private static final Logger logger = Logger
			.getLogger(ConnectionPoolConfigurationReport.class);
	private static ConfigurationFactory configurationFactoryInstance = ConfigurationFactory
			.getInstance();

	private static final ConnectionPoolConfigurationReport connectionPoolConfigurationSingleton = new ConnectionPoolConfigurationReport();

	private ConnectionPoolConfigurationReport() {

	}

	/** provide singleton instance of ConnectionPoolConfigurationReport */
	public static ConnectionPoolConfigurationReport getInstance() {
		return connectionPoolConfigurationSingleton;
	}

	/**
	 * tekes the Metric registry generated by ConnectionPoolConfigurationMetrics
	 * class and provide as input for JMXreporter
	 */
	public static void generateConnectionPoolConfigurationReport() {

		MetricsRegistry confReportRegistry = ConnectionPoolConfigurationMetrics
				.getConnPoolConfigurationRegistry();
		JmxReporter jmxReporterInstance = new JmxReporter(confReportRegistry);
		jmxReporterInstance.start();

		/** console reporter is used to display results on console */

		com.yammer.metrics.reporting.ConsoleReporter.enable(confReportRegistry,
				configurationFactoryInstance.getPeriod(),
				configurationFactoryInstance.getTimeunit());
		logger.debug("Displaying ConnectionPoolConfiguration Metrics on Console : with period "
				+ configurationFactoryInstance.getPeriod()
				+ " "
				+ "and Time Unit:" + configurationFactoryInstance.getTimeunit());

		/** CSVreporter is used to generate csv files in given directory */

		com.yammer.metrics.reporting.CsvReporter.enable(
				confReportRegistry,
				new File(configurationFactoryInstance
						.getFileDestinationConnPoolConfReport()),
				configurationFactoryInstance.getPeriod(),
				configurationFactoryInstance.getTimeunit());
		logger.debug("writing ConnectionPoolConfiguration Metrics to the directory location :"
				+ configurationFactoryInstance
						.getFileDestinationConnPoolMonitorReport()
				+ " "
				+ "with period :"
				+ configurationFactoryInstance.getPeriod()
				+ " "
				+ "and Time Unit:"
				+ configurationFactoryInstance.getTimeunit());

	}

}
